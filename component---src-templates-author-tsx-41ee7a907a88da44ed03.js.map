{"version":3,"sources":["webpack:///./src/components/icons/facebook.tsx","webpack:///./src/components/icons/website.tsx","webpack:///./src/components/icons/twitter.tsx","webpack:///./src/components/icons/linkedin.tsx","webpack:///./src/templates/author.tsx"],"names":["Facebook","Object","core_browser_esm","class","xmlns","width","height","viewBox","d","Website","style","stroke","strokeLinejoin","strokeMiterlimit","fill","Twitter","Linkedin","HiddenMobile","name","styles","AuthorMeta","styled_base_browser_esm","target","AuthorBio","Bull","AuthorProfileBioImage","pageQuery","Author","props","author","data","authorYaml","edges","allMarkdownRemark","filter","edge","i","isDraft","node","frontmatter","draft","process","containsAuthor","length","id","totalCount","layouts","Helmet_default","a","lang","config","title","content","bio","property","siteUrl","pathContext","slug","twitter","split","Wrapper","className","css","css_browser_esm","outer","SiteHeader","backgroundImage","profile_image","childImageSharp","fluid","src","inner","SiteNav","isHome","shared","AuthorProfileImage","avatar","alt","location","website","SocialLink","href","rel","facebook","linkedin","SiteMain","PostFeed","PostFeedRaise","map","_ref","PostCard","key","fields","post","Footer"],"mappings":"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","file":"component---src-templates-author-tsx-41ee7a907a88da44ed03.js","sourcesContent":["// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst Facebook: React.FunctionComponent = () => (\n   <svg class=\"facebook\" xmlns=\"http://www.w3.org/2000/svg\" width=\"25\" height=\"25\" viewBox=\"15.8 15.8 25 25\"><path d=\"M32.8 24.7h-3.2v-2.1c0-0.8 0.5-1 0.9-1s2.3 0 2.3 0v-3.5l-3.1 0c-3.5 0-4.3 2.6-4.3 4.3v2.3h-2v3.6h2c0 4.6 0 10.2 0 10.2h4.2c0 0 0-5.6 0-10.2h2.8L32.8 24.7z\"/></svg>\n);\nexport default Facebook;\n","// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst Website: React.FunctionComponent = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" style={{ height: '1.6rem' }}>\n    <path\n      d=\"M23.5 11.957c0 6.375-5.163 11.544-11.532 11.544C5.599 23.5.5 18.125.5 11.75.5 5.542 5.37.758 11.505.511l.5-.011C18.374.5 23.5 5.582 23.5 11.957zM11.505.511c-6 6.5-6 14.98 0 22.98m1-22.98c6 6.5 6 14.977 0 22.977M2 17.479h20.063m-19.657-12h19.062m-20.968 6h22.938\"\n      stroke=\"#fff\"\n      strokeLinejoin=\"round\"\n      strokeMiterlimit=\"10\"\n      fill=\"none\"\n    />\n  </svg>\n);\nexport default Website;\n","// tslint:disable:no-http-string\nimport * as React from 'react';\n\nconst Twitter: React.FunctionComponent = () => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\n    <path d=\"M30.063 7.313c-.813 1.125-1.75 2.125-2.875 2.938v.75c0 1.563-.188 3.125-.688 4.625a15.088 15.088 0 0 1-2.063 4.438c-.875 1.438-2 2.688-3.25 3.813a15.015 15.015 0 0 1-4.625 2.563c-1.813.688-3.75 1-5.75 1-3.25 0-6.188-.875-8.875-2.625.438.063.875.125 1.375.125 2.688 0 5.063-.875 7.188-2.5-1.25 0-2.375-.375-3.375-1.125s-1.688-1.688-2.063-2.875c.438.063.813.125 1.125.125.5 0 1-.063 1.5-.25-1.313-.25-2.438-.938-3.313-1.938a5.673 5.673 0 0 1-1.313-3.688v-.063c.813.438 1.688.688 2.625.688a5.228 5.228 0 0 1-1.875-2c-.5-.875-.688-1.813-.688-2.75 0-1.063.25-2.063.75-2.938 1.438 1.75 3.188 3.188 5.25 4.25s4.313 1.688 6.688 1.813a5.579 5.579 0 0 1 1.5-5.438c1.125-1.125 2.5-1.688 4.125-1.688s3.063.625 4.188 1.813a11.48 11.48 0 0 0 3.688-1.375c-.438 1.375-1.313 2.438-2.563 3.188 1.125-.125 2.188-.438 3.313-.875z\" />\n  </svg>\n);\nexport default Twitter;\n","import * as React from 'react';\n// https://learn.cloudcannon.com/jekyll/svg-icons/ source of icons \n\n const Linkedin: React.FunctionComponent = () => (\n   <svg class=\"linkedin\" fill=\"#000000\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M19,19H16V13.7A1.5,1.5 0 0,0 14.5,12.2A1.5,1.5 0 0,0 13,13.7V19H10V10H13V11.2C13.5,10.36 14.59,9.8 15.5,9.8A3.5,3.5 0 0,1 19,13.3M6.5,8.31C5.5,8.31 4.69,7.5 4.69,6.5A1.81,1.81 0 0,1 6.5,4.69C7.5,4.69 8.31,5.5 8.31,6.5A1.81,1.81 0 0,1 6.5,8.31M8,19H5V10H8M20,2H4C2.89,2 2,2.89 2,4V20A2,2 0 0,0 4,22H20A2,2 0 0,0 22,20V4C22,2.89 21.1,2 20,2Z\" /></svg>\n );\n export default Linkedin;\n","import { graphql } from 'gatsby';\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport { css } from '@emotion/core';\n\nimport Footer from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport PostCard from '../components/PostCard';\nimport Wrapper from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  AuthorProfileImage,\n  inner,\n  outer,\n  PostFeed,\n  PostFeedRaise,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteTitle,\n  SiteMain,\n  SocialLink,\n} from '../styles/shared';\nimport { PageContext } from './post';\nimport Facebook from '../components/icons/facebook';\nimport Helmet from 'react-helmet';\nimport config from '../website-config';\nimport Website from '../components/icons/website';\nimport Twitter from '../components/icons/twitter';\nimport Linkedin from '../components/icons/linkedin';\n\n\nconst HiddenMobile = css`\n  @media (max-width: 500px) {\n    display: none;\n  }\n`;\n\nconst AuthorMeta = styled.div`\n  z-index: 10;\n  flex-shrink: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 0 10px 0;\n  font-family: Georgia, serif;\n  font-style: italic;\n`;\n\nconst AuthorBio = styled.h2`\n  z-index: 10;\n  flex-shrink: 0;\n  margin: 5px 0 10px 0;\n  max-width: 600px;\n  font-size: 2rem;\n  line-height: 1.3em;\n  font-weight: 300;\n  letter-spacing: 0.5px;\n  opacity: 0.8;\n`;\n\nconst Bull = styled.span`\n  display: inline-block;\n  margin: 0 12px;\n  opacity: 0.5;\n`;\n\nconst AuthorProfileBioImage = css`\n  z-index: 10;\n  flex-shrink: 0;\n  margin: 0 0 20px 0;\n  width: 100px;\n  height: 100px;\n  box-shadow: rgba(255, 255, 255, 0.1) 0 0 0 6px;\n`;\n\ninterface AuthorTemplateProps {\n  pathContext: {\n    slug: string;\n  };\n  pageContext: {\n    author: string;\n  };\n  data: {\n    logo: {\n      childImageSharp: {\n        fluid: any;\n      };\n    };\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n    authorYaml: {\n      id: string;\n      website?: string;\n      twitter?: string;\n      facebook?: string;\n      location?: string;\n      linkedin?: string;\n      // eslint-disable-next-line @typescript-eslint/camelcase\n      profile_image?: {\n        childImageSharp: {\n          fluid: any;\n        };\n      };\n      bio?: string;\n      avatar: {\n        childImageSharp: {\n          fluid: any;\n        };\n      };\n    };\n  };\n}\n\nconst Author: React.FunctionComponent<AuthorTemplateProps> = props => {\n  const author = props.data.authorYaml;\n\n  const edges = props.data.allMarkdownRemark.edges.filter(\n    edge => {\n      const isDraft = (edge.node.frontmatter.draft !== true ||\n       process.env.NODE_ENV === 'development');\n       var containsAuthor = false;\n       var i;\n       for (i = 0; i < edge.node.frontmatter.author.length; i++) {\n        if(edge.node.frontmatter.author[i].id == author.id){\n          containsAuthor = true;\n        }\n      }\n      return isDraft && edge.node.frontmatter.author && containsAuthor;\n    }\n  );\n  const totalCount = edges.length;\n\n  return (\n    <IndexLayout>\n      <Helmet>\n        <html lang={config.lang} />\n        <title>\n          {author.id} - {config.title}\n        </title>\n        <meta name=\"description\" content={author.bio} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"profile\" />\n        <meta property=\"og:title\" content={`${author.id} - ${config.title}`} />\n        <meta property=\"og:url\" content={config.siteUrl + props.pathContext.slug} />\n\n        <meta name=\"twitter:card\" content=\"summary\" />\n        <meta name=\"twitter:title\" content={`${author.id} - ${config.title}`} />\n        <meta name=\"twitter:url\" content={config.siteUrl + props.pathContext.slug} />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        {config.twitter && (\n          <meta\n            name=\"twitter:creator\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n      </Helmet>\n      <Wrapper>\n        <header\n          className=\"no-cover\"\n          css={[outer, SiteHeader]}\n          style={{\n            // eslint-disable-next-line @typescript-eslint/camelcase\n            backgroundImage: author.profile_image ?\n              `url(${author.profile_image.childImageSharp.fluid.src})` :\n              '',\n          }}\n        >\n          <div css={inner}>\n            <SiteNav isHome={false} />\n            <SiteHeaderContent>\n              <img\n                css={[AuthorProfileImage, AuthorProfileBioImage]}\n                src={props.data.authorYaml.avatar.childImageSharp.fluid.src}\n                alt={author.id}\n              />\n              <SiteTitle>{author.id}</SiteTitle>\n              {author.bio && <AuthorBio>{author.bio}</AuthorBio>}\n              <AuthorMeta>\n                {author.location && (\n                  <div css={HiddenMobile}>\n                    {author.location} <Bull>&bull;</Bull>\n                  </div>\n                )}\n                <div css={HiddenMobile}>\n                  {totalCount > 1 && `${totalCount} posts`}\n                  {totalCount === 1 && '1 post'}\n                  {totalCount === 0 && 'No posts'} <Bull>•</Bull>\n                </div>\n                {author.website && (\n                  <div>\n                    <a\n                      className=\"social-link-wb\"\n                      css={SocialLink}\n                      href={author.website}\n                      title=\"Website\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      <Website />\n                    </a>\n                  </div>\n                )}\n                {author.twitter && (\n                  <a\n                    className=\"social-link-tw\"\n                    css={SocialLink}\n                    href={`https://twitter.com/${author.twitter}`}\n                    title=\"Twitter\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <Twitter />\n                  </a>\n                )}\n                {author.facebook && (\n                  <a\n                    className=\"social-link-fb\"\n                    css={SocialLink}\n                    href={`https://www.facebook.com/${author.facebook}`}\n                    title=\"Facebook\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <Facebook />\n                  </a>\n                )}\n\n                {author.linkedin && (\n                  <a\n                    className=\"social-link-linkedin\"\n                    css={SocialLink}\n                    href={`${author.linkedin}`}\n                    title=\"Linkedin\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <Linkedin />\n                  </a>\n                )}\n\n\n              </AuthorMeta>\n            </SiteHeaderContent>\n          </div>\n        </header>\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            <div css={[PostFeed, PostFeedRaise]}>\n              {edges.map(({ node }) => {\n                return <PostCard key={node.fields.slug} post={node} />;\n              })}\n            </div>\n          </div>\n        </main>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default Author;\n\nexport const pageQuery = graphql`\n  query($author: String) {\n    authorYaml(id: { eq: $author }) {\n      id\n      website\n      twitter\n      bio\n      facebook\n      linkedin\n      location\n      profile_image {\n        childImageSharp {\n          fluid(maxWidth: 3720) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      avatar {\n        childImageSharp {\n          fluid(maxWidth: 200) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { draft: { ne: true } } },\n      sort: { fields: [frontmatter___date], order: DESC },\n      limit: 2000,\n    ) {\n      edges {\n        node {\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            date\n            draft\n            image {\n              childImageSharp {\n                fluid(maxWidth: 3720) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            author {\n              id\n              bio\n              avatar {\n                children {\n                  ... on ImageSharp {\n                    fixed(quality: 90) {\n                      src\n                    }\n                  }\n                }\n              }\n            }\n          }\n          fields {\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}